### YamlMime:ManagedReference
items:
- uid: cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse
  commentId: T:cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse
  id: ApiResponse
  parent: cqhttp.Cyan.ApiCall.Requests.Base
  children:
  - cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse.data
  - cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse.retcode
  - cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse.status
  langs:
  - csharp
  - vb
  name: ApiResponse
  nameWithType: ApiResponse
  fullName: cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse
  type: Class
  source:
    remote:
      path: src/ApiCall/Requests/Base/ApiRequestResponse.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: ApiResponse
    path: src/ApiCall/Requests/Base/ApiRequestResponse.cs
    startLine: 27
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.ApiCall.Requests.Base
  summary: "\n调用API时cqhttp的响应\n"
  example: []
  syntax:
    content: >-
      [JsonObject]

      public class ApiResponse
    content.vb: >-
      <JsonObject>

      Public Class ApiResponse
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Newtonsoft.Json.JsonObjectAttribute
    ctor: Newtonsoft.Json.JsonObjectAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse.status
  commentId: P:cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse.status
  id: status
  parent: cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse
  langs:
  - csharp
  - vb
  name: status
  nameWithType: ApiResponse.status
  fullName: cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse.status
  type: Property
  source:
    remote:
      path: src/ApiCall/Requests/Base/ApiRequestResponse.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: status
    path: src/ApiCall/Requests/Base/ApiRequestResponse.cs
    startLine: 34
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.ApiCall.Requests.Base
  summary: "\n&quot;ok&quot;,&quot;async&quot;,&quot;failed&quot;\n参照<see>https://cqhttp.cc/docs/4.6/#/API</see>中有关status的说明\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("status")]

      public string status { get; }
    parameters: []
    return:
      type: System.String
      description: ''
    content.vb: >-
      <JsonProperty("status")>

      Public ReadOnly Property status As String
  overload: cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse.status*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: status
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse.retcode
  commentId: P:cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse.retcode
  id: retcode
  parent: cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse
  langs:
  - csharp
  - vb
  name: retcode
  nameWithType: ApiResponse.retcode
  fullName: cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse.retcode
  type: Property
  source:
    remote:
      path: src/ApiCall/Requests/Base/ApiRequestResponse.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: retcode
    path: src/ApiCall/Requests/Base/ApiRequestResponse.cs
    startLine: 41
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.ApiCall.Requests.Base
  summary: "\nstatus ok为0,async为1,failed参照链接\n<see>https://d.cqp.me/Pro/%E5%BC%80%E5%8F%91/Error</see>\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("retcode")]

      public int retcode { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("retcode")>

      Public ReadOnly Property retcode As Integer
  overload: cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse.retcode*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: retcode
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse.data
  commentId: P:cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse.data
  id: data
  parent: cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse
  langs:
  - csharp
  - vb
  name: data
  nameWithType: ApiResponse.data
  fullName: cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse.data
  type: Property
  source:
    remote:
      path: src/ApiCall/Requests/Base/ApiRequestResponse.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: data
    path: src/ApiCall/Requests/Base/ApiRequestResponse.cs
    startLine: 48
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.ApiCall.Requests.Base
  summary: "\n原封不动\n<see>https://cqhttp.cc/docs/4.6/#/API</see>\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("data")]

      public JObject data { get; }
    parameters: []
    return:
      type: Newtonsoft.Json.Linq.JObject
    content.vb: >-
      <JsonProperty("data")>

      Public ReadOnly Property data As JObject
  overload: cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse.data*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: data
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: cqhttp.Cyan.ApiCall.Requests.Base
  commentId: N:cqhttp.Cyan.ApiCall.Requests.Base
  name: cqhttp.Cyan.ApiCall.Requests.Base
  nameWithType: cqhttp.Cyan.ApiCall.Requests.Base
  fullName: cqhttp.Cyan.ApiCall.Requests.Base
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse.status*
  commentId: Overload:cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse.status
  name: status
  nameWithType: ApiResponse.status
  fullName: cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse.status
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse.retcode*
  commentId: Overload:cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse.retcode
  name: retcode
  nameWithType: ApiResponse.retcode
  fullName: cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse.retcode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse.data*
  commentId: Overload:cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse.data
  name: data
  nameWithType: ApiResponse.data
  fullName: cqhttp.Cyan.ApiCall.Requests.Base.ApiResponse.data
- uid: Newtonsoft.Json.Linq.JObject
  commentId: T:Newtonsoft.Json.Linq.JObject
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: Newtonsoft.Json.Linq.JObject
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: true
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
