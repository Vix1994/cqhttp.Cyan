### YamlMime:ManagedReference
items:
- uid: cqhttp.Cyan.Events.EventListener.HttpEventListener
  commentId: T:cqhttp.Cyan.Events.EventListener.HttpEventListener
  id: HttpEventListener
  parent: cqhttp.Cyan.Events.EventListener
  children:
  - cqhttp.Cyan.Events.EventListener.HttpEventListener.#ctor(System.Int32,System.String)
  - cqhttp.Cyan.Events.EventListener.HttpEventListener.StartListen(System.Func{cqhttp.Cyan.Events.CQEvents.Base.CQEvent,cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse})
  langs:
  - csharp
  - vb
  name: HttpEventListener
  nameWithType: HttpEventListener
  fullName: cqhttp.Cyan.Events.EventListener.HttpEventListener
  type: Class
  source:
    remote:
      path: src/Events/EventListener/HTTPListener.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: HttpEventListener
    path: src/Events/EventListener/HTTPListener.cs
    startLine: 14
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.Events.EventListener
  summary: "\nHTTP监听上报消息\n"
  example: []
  syntax:
    content: 'public class HttpEventListener : CQEventListener'
    content.vb: >-
      Public Class HttpEventListener
          Inherits CQEventListener
  inheritance:
  - System.Object
  - cqhttp.Cyan.Events.EventListener.CQEventListener
  inheritedMembers:
  - cqhttp.Cyan.Events.EventListener.CQEventListener.secret
  - cqhttp.Cyan.Events.EventListener.CQEventListener.listen_callback
  - cqhttp.Cyan.Events.EventListener.CQEventListener.listen_task
  - cqhttp.Cyan.Events.EventListener.CQEventListener.listen_lock
  - cqhttp.Cyan.Events.EventListener.CQEventListener.Verify(System.Byte[],System.String,System.Byte[],System.Int32,System.Int32)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: cqhttp.Cyan.Events.EventListener.HttpEventListener.#ctor(System.Int32,System.String)
  commentId: M:cqhttp.Cyan.Events.EventListener.HttpEventListener.#ctor(System.Int32,System.String)
  id: '#ctor(System.Int32,System.String)'
  parent: cqhttp.Cyan.Events.EventListener.HttpEventListener
  langs:
  - csharp
  - vb
  name: HttpEventListener(Int32, String)
  nameWithType: HttpEventListener.HttpEventListener(Int32, String)
  fullName: cqhttp.Cyan.Events.EventListener.HttpEventListener.HttpEventListener(System.Int32, System.String)
  type: Constructor
  source:
    remote:
      path: src/Events/EventListener/HTTPListener.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: .ctor
    path: src/Events/EventListener/HTTPListener.cs
    startLine: 18
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.Events.EventListener
  summary: ''
  example: []
  syntax:
    content: public HttpEventListener(int port, string secret = "")
    parameters:
    - id: port
      type: System.Int32
    - id: secret
      type: System.String
    content.vb: Public Sub New(port As Integer, secret As String = "")
  overload: cqhttp.Cyan.Events.EventListener.HttpEventListener.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: cqhttp.Cyan.Events.EventListener.HttpEventListener.StartListen(System.Func{cqhttp.Cyan.Events.CQEvents.Base.CQEvent,cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse})
  commentId: M:cqhttp.Cyan.Events.EventListener.HttpEventListener.StartListen(System.Func{cqhttp.Cyan.Events.CQEvents.Base.CQEvent,cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse})
  id: StartListen(System.Func{cqhttp.Cyan.Events.CQEvents.Base.CQEvent,cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse})
  parent: cqhttp.Cyan.Events.EventListener.HttpEventListener
  langs:
  - csharp
  - vb
  name: StartListen(Func<CQEvent, CQResponse>)
  nameWithType: HttpEventListener.StartListen(Func<CQEvent, CQResponse>)
  fullName: cqhttp.Cyan.Events.EventListener.HttpEventListener.StartListen(System.Func<cqhttp.Cyan.Events.CQEvents.Base.CQEvent, cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse>)
  type: Method
  source:
    remote:
      path: src/Events/EventListener/HTTPListener.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: StartListen
    path: src/Events/EventListener/HTTPListener.cs
    startLine: 23
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.Events.EventListener
  summary: ''
  example: []
  syntax:
    content: public override void StartListen(Func<CQEvent, CQResponse> callback)
    parameters:
    - id: callback
      type: System.Func{cqhttp.Cyan.Events.CQEvents.Base.CQEvent,cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse}
    content.vb: Public Overrides Sub StartListen(callback As Func(Of CQEvent, CQResponse))
  overridden: cqhttp.Cyan.Events.EventListener.CQEventListener.StartListen(System.Func{cqhttp.Cyan.Events.CQEvents.Base.CQEvent,cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse})
  overload: cqhttp.Cyan.Events.EventListener.HttpEventListener.StartListen*
  nameWithType.vb: HttpEventListener.StartListen(Func(Of CQEvent, CQResponse))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: cqhttp.Cyan.Events.EventListener.HttpEventListener.StartListen(System.Func(Of cqhttp.Cyan.Events.CQEvents.Base.CQEvent, cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse))
  name.vb: StartListen(Func(Of CQEvent, CQResponse))
references:
- uid: cqhttp.Cyan.Events.EventListener
  commentId: N:cqhttp.Cyan.Events.EventListener
  name: cqhttp.Cyan.Events.EventListener
  nameWithType: cqhttp.Cyan.Events.EventListener
  fullName: cqhttp.Cyan.Events.EventListener
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: cqhttp.Cyan.Events.EventListener.CQEventListener
  commentId: T:cqhttp.Cyan.Events.EventListener.CQEventListener
  parent: cqhttp.Cyan.Events.EventListener
  name: CQEventListener
  nameWithType: CQEventListener
  fullName: cqhttp.Cyan.Events.EventListener.CQEventListener
- uid: cqhttp.Cyan.Events.EventListener.CQEventListener.secret
  commentId: P:cqhttp.Cyan.Events.EventListener.CQEventListener.secret
  parent: cqhttp.Cyan.Events.EventListener.CQEventListener
  name: secret
  nameWithType: CQEventListener.secret
  fullName: cqhttp.Cyan.Events.EventListener.CQEventListener.secret
- uid: cqhttp.Cyan.Events.EventListener.CQEventListener.listen_callback
  commentId: F:cqhttp.Cyan.Events.EventListener.CQEventListener.listen_callback
  parent: cqhttp.Cyan.Events.EventListener.CQEventListener
  name: listen_callback
  nameWithType: CQEventListener.listen_callback
  fullName: cqhttp.Cyan.Events.EventListener.CQEventListener.listen_callback
- uid: cqhttp.Cyan.Events.EventListener.CQEventListener.listen_task
  commentId: F:cqhttp.Cyan.Events.EventListener.CQEventListener.listen_task
  parent: cqhttp.Cyan.Events.EventListener.CQEventListener
  name: listen_task
  nameWithType: CQEventListener.listen_task
  fullName: cqhttp.Cyan.Events.EventListener.CQEventListener.listen_task
- uid: cqhttp.Cyan.Events.EventListener.CQEventListener.listen_lock
  commentId: F:cqhttp.Cyan.Events.EventListener.CQEventListener.listen_lock
  parent: cqhttp.Cyan.Events.EventListener.CQEventListener
  name: listen_lock
  nameWithType: CQEventListener.listen_lock
  fullName: cqhttp.Cyan.Events.EventListener.CQEventListener.listen_lock
- uid: cqhttp.Cyan.Events.EventListener.CQEventListener.Verify(System.Byte[],System.String,System.Byte[],System.Int32,System.Int32)
  commentId: M:cqhttp.Cyan.Events.EventListener.CQEventListener.Verify(System.Byte[],System.String,System.Byte[],System.Int32,System.Int32)
  parent: cqhttp.Cyan.Events.EventListener.CQEventListener
  isExternal: true
  name: Verify(Byte[], String, Byte[], Int32, Int32)
  nameWithType: CQEventListener.Verify(Byte[], String, Byte[], Int32, Int32)
  fullName: cqhttp.Cyan.Events.EventListener.CQEventListener.Verify(System.Byte[], System.String, System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: CQEventListener.Verify(Byte(), String, Byte(), Int32, Int32)
  fullName.vb: cqhttp.Cyan.Events.EventListener.CQEventListener.Verify(System.Byte(), System.String, System.Byte(), System.Int32, System.Int32)
  name.vb: Verify(Byte(), String, Byte(), Int32, Int32)
  spec.csharp:
  - uid: cqhttp.Cyan.Events.EventListener.CQEventListener.Verify(System.Byte[],System.String,System.Byte[],System.Int32,System.Int32)
    name: Verify
    nameWithType: CQEventListener.Verify
    fullName: cqhttp.Cyan.Events.EventListener.CQEventListener.Verify
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: cqhttp.Cyan.Events.EventListener.CQEventListener.Verify(System.Byte[],System.String,System.Byte[],System.Int32,System.Int32)
    name: Verify
    nameWithType: CQEventListener.Verify
    fullName: cqhttp.Cyan.Events.EventListener.CQEventListener.Verify
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: cqhttp.Cyan.Events.EventListener.HttpEventListener.#ctor*
  commentId: Overload:cqhttp.Cyan.Events.EventListener.HttpEventListener.#ctor
  name: HttpEventListener
  nameWithType: HttpEventListener.HttpEventListener
  fullName: cqhttp.Cyan.Events.EventListener.HttpEventListener.HttpEventListener
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: cqhttp.Cyan.Events.EventListener.CQEventListener.StartListen(System.Func{cqhttp.Cyan.Events.CQEvents.Base.CQEvent,cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse})
  commentId: M:cqhttp.Cyan.Events.EventListener.CQEventListener.StartListen(System.Func{cqhttp.Cyan.Events.CQEvents.Base.CQEvent,cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse})
  parent: cqhttp.Cyan.Events.EventListener.CQEventListener
  isExternal: true
  name: StartListen(Func<CQEvent, CQResponse>)
  nameWithType: CQEventListener.StartListen(Func<CQEvent, CQResponse>)
  fullName: cqhttp.Cyan.Events.EventListener.CQEventListener.StartListen(System.Func<cqhttp.Cyan.Events.CQEvents.Base.CQEvent, cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse>)
  nameWithType.vb: CQEventListener.StartListen(Func(Of CQEvent, CQResponse))
  fullName.vb: cqhttp.Cyan.Events.EventListener.CQEventListener.StartListen(System.Func(Of cqhttp.Cyan.Events.CQEvents.Base.CQEvent, cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse))
  name.vb: StartListen(Func(Of CQEvent, CQResponse))
  spec.csharp:
  - uid: cqhttp.Cyan.Events.EventListener.CQEventListener.StartListen(System.Func{cqhttp.Cyan.Events.CQEvents.Base.CQEvent,cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse})
    name: StartListen
    nameWithType: CQEventListener.StartListen
    fullName: cqhttp.Cyan.Events.EventListener.CQEventListener.StartListen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: cqhttp.Cyan.Events.CQEvents.Base.CQEvent
    name: CQEvent
    nameWithType: CQEvent
    fullName: cqhttp.Cyan.Events.CQEvents.Base.CQEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse
    name: CQResponse
    nameWithType: CQResponse
    fullName: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: cqhttp.Cyan.Events.EventListener.CQEventListener.StartListen(System.Func{cqhttp.Cyan.Events.CQEvents.Base.CQEvent,cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse})
    name: StartListen
    nameWithType: CQEventListener.StartListen
    fullName: cqhttp.Cyan.Events.EventListener.CQEventListener.StartListen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: cqhttp.Cyan.Events.CQEvents.Base.CQEvent
    name: CQEvent
    nameWithType: CQEvent
    fullName: cqhttp.Cyan.Events.CQEvents.Base.CQEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse
    name: CQResponse
    nameWithType: CQResponse
    fullName: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: cqhttp.Cyan.Events.EventListener.HttpEventListener.StartListen*
  commentId: Overload:cqhttp.Cyan.Events.EventListener.HttpEventListener.StartListen
  name: StartListen
  nameWithType: HttpEventListener.StartListen
  fullName: cqhttp.Cyan.Events.EventListener.HttpEventListener.StartListen
- uid: System.Func{cqhttp.Cyan.Events.CQEvents.Base.CQEvent,cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse}
  commentId: T:System.Func{cqhttp.Cyan.Events.CQEvents.Base.CQEvent,cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse}
  parent: System
  definition: System.Func`2
  name: Func<CQEvent, CQResponse>
  nameWithType: Func<CQEvent, CQResponse>
  fullName: System.Func<cqhttp.Cyan.Events.CQEvents.Base.CQEvent, cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse>
  nameWithType.vb: Func(Of CQEvent, CQResponse)
  fullName.vb: System.Func(Of cqhttp.Cyan.Events.CQEvents.Base.CQEvent, cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse)
  name.vb: Func(Of CQEvent, CQResponse)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: cqhttp.Cyan.Events.CQEvents.Base.CQEvent
    name: CQEvent
    nameWithType: CQEvent
    fullName: cqhttp.Cyan.Events.CQEvents.Base.CQEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse
    name: CQResponse
    nameWithType: CQResponse
    fullName: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: cqhttp.Cyan.Events.CQEvents.Base.CQEvent
    name: CQEvent
    nameWithType: CQEvent
    fullName: cqhttp.Cyan.Events.CQEvents.Base.CQEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse
    name: CQResponse
    nameWithType: CQResponse
    fullName: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
