### YamlMime:ManagedReference
items:
- uid: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse
  commentId: T:cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse
  id: CQReplyMessageResponse
  parent: cqhttp.Cyan.Events.CQEvents.CQResponses.Base
  children:
  - cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse.#ctor(cqhttp.Cyan.Messages.Message,System.Boolean)
  - cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse.auto_escape
  - cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse.reply
  langs:
  - csharp
  - vb
  name: CQReplyMessageResponse
  nameWithType: CQReplyMessageResponse
  fullName: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse
  type: Class
  source:
    remote:
      path: src/Events/CQEvents/CQResponses/Base/CQReplyMessageResponse.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: CQReplyMessageResponse
    path: src/Events/CQEvents/CQResponses/Base/CQReplyMessageResponse.cs
    startLine: 2
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.Events.CQEvents.CQResponses.Base
  summary: ''
  example: []
  syntax:
    content: 'public abstract class CQReplyMessageResponse : CQResponse'
    content.vb: >-
      Public MustInherit Class CQReplyMessageResponse
          Inherits CQResponse
  inheritance:
  - System.Object
  - cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse
  derivedClasses:
  - cqhttp.Cyan.Events.CQEvents.CQResponses.DiscussMessageResponse
  - cqhttp.Cyan.Events.CQEvents.CQResponses.GroupMessageResponse
  - cqhttp.Cyan.Events.CQEvents.CQResponses.PrivateMessageResponse
  inheritedMembers:
  - cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse.content
  - cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse.reply
  commentId: P:cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse.reply
  id: reply
  parent: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse
  langs:
  - csharp
  - vb
  name: reply
  nameWithType: CQReplyMessageResponse.reply
  fullName: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse.reply
  type: Property
  source:
    remote:
      path: src/Events/CQEvents/CQResponses/Base/CQReplyMessageResponse.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: reply
    path: src/Events/CQEvents/CQResponses/Base/CQReplyMessageResponse.cs
    startLine: 4
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.Events.CQEvents.CQResponses.Base
  summary: ''
  example: []
  syntax:
    content: public Message reply { get; }
    parameters: []
    return:
      type: cqhttp.Cyan.Messages.Message
    content.vb: Public ReadOnly Property reply As Message
  overload: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse.reply*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse.auto_escape
  commentId: P:cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse.auto_escape
  id: auto_escape
  parent: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse
  langs:
  - csharp
  - vb
  name: auto_escape
  nameWithType: CQReplyMessageResponse.auto_escape
  fullName: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse.auto_escape
  type: Property
  source:
    remote:
      path: src/Events/CQEvents/CQResponses/Base/CQReplyMessageResponse.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: auto_escape
    path: src/Events/CQEvents/CQResponses/Base/CQReplyMessageResponse.cs
    startLine: 6
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.Events.CQEvents.CQResponses.Base
  summary: ''
  example: []
  syntax:
    content: public bool auto_escape { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property auto_escape As Boolean
  overload: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse.auto_escape*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse.#ctor(cqhttp.Cyan.Messages.Message,System.Boolean)
  commentId: M:cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse.#ctor(cqhttp.Cyan.Messages.Message,System.Boolean)
  id: '#ctor(cqhttp.Cyan.Messages.Message,System.Boolean)'
  parent: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse
  langs:
  - csharp
  - vb
  name: CQReplyMessageResponse(Message, Boolean)
  nameWithType: CQReplyMessageResponse.CQReplyMessageResponse(Message, Boolean)
  fullName: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse.CQReplyMessageResponse(cqhttp.Cyan.Messages.Message, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Events/CQEvents/CQResponses/Base/CQReplyMessageResponse.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: .ctor
    path: src/Events/CQEvents/CQResponses/Base/CQReplyMessageResponse.cs
    startLine: 8
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.Events.CQEvents.CQResponses.Base
  summary: ''
  example: []
  syntax:
    content: public CQReplyMessageResponse(Message reply, bool auto_escape)
    parameters:
    - id: reply
      type: cqhttp.Cyan.Messages.Message
    - id: auto_escape
      type: System.Boolean
    content.vb: Public Sub New(reply As Message, auto_escape As Boolean)
  overload: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: cqhttp.Cyan.Events.CQEvents.CQResponses.Base
  commentId: N:cqhttp.Cyan.Events.CQEvents.CQResponses.Base
  name: cqhttp.Cyan.Events.CQEvents.CQResponses.Base
  nameWithType: cqhttp.Cyan.Events.CQEvents.CQResponses.Base
  fullName: cqhttp.Cyan.Events.CQEvents.CQResponses.Base
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse
  commentId: T:cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse
  parent: cqhttp.Cyan.Events.CQEvents.CQResponses.Base
  name: CQResponse
  nameWithType: CQResponse
  fullName: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse
- uid: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse.content
  commentId: P:cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse.content
  parent: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse
  name: content
  nameWithType: CQResponse.content
  fullName: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse.content
- uid: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse.ToString
  commentId: M:cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse.ToString
  parent: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse
  name: ToString()
  nameWithType: CQResponse.ToString()
  fullName: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse.ToString()
  spec.csharp:
  - uid: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse.ToString
    name: ToString
    nameWithType: CQResponse.ToString
    fullName: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse.ToString
    name: ToString
    nameWithType: CQResponse.ToString
    fullName: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQResponse.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse.reply*
  commentId: Overload:cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse.reply
  name: reply
  nameWithType: CQReplyMessageResponse.reply
  fullName: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse.reply
- uid: cqhttp.Cyan.Messages.Message
  commentId: T:cqhttp.Cyan.Messages.Message
  parent: cqhttp.Cyan.Messages
  name: Message
  nameWithType: Message
  fullName: cqhttp.Cyan.Messages.Message
- uid: cqhttp.Cyan.Messages
  commentId: N:cqhttp.Cyan.Messages
  name: cqhttp.Cyan.Messages
  nameWithType: cqhttp.Cyan.Messages
  fullName: cqhttp.Cyan.Messages
- uid: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse.auto_escape*
  commentId: Overload:cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse.auto_escape
  name: auto_escape
  nameWithType: CQReplyMessageResponse.auto_escape
  fullName: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse.auto_escape
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse.#ctor*
  commentId: Overload:cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse.#ctor
  name: CQReplyMessageResponse
  nameWithType: CQReplyMessageResponse.CQReplyMessageResponse
  fullName: cqhttp.Cyan.Events.CQEvents.CQResponses.Base.CQReplyMessageResponse.CQReplyMessageResponse
