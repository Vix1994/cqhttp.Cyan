### YamlMime:ManagedReference
items:
- uid: cqhttp.Cyan.Messages.Message
  commentId: T:cqhttp.Cyan.Messages.Message
  id: Message
  parent: cqhttp.Cyan.Messages
  children:
  - cqhttp.Cyan.Messages.Message.#ctor(cqhttp.Cyan.Messages.CQElements.Base.Element[])
  - cqhttp.Cyan.Messages.Message.data
  - cqhttp.Cyan.Messages.Message.Deserialize(System.String,System.Int16@)
  - cqhttp.Cyan.Messages.Message.op_Addition(cqhttp.Cyan.Messages.Message,cqhttp.Cyan.Messages.CQElements.Base.Element)
  - cqhttp.Cyan.Messages.Message.op_Addition(cqhttp.Cyan.Messages.Message,cqhttp.Cyan.Messages.Message)
  - cqhttp.Cyan.Messages.Message.raw_data_cq
  - cqhttp.Cyan.Messages.Message.raw_data_json
  - cqhttp.Cyan.Messages.Message.ToString
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: Message
  fullName: cqhttp.Cyan.Messages.Message
  type: Class
  source:
    remote:
      path: src/Messages/Message.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: Message
    path: src/Messages/Message.cs
    startLine: 11
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.Messages
  summary: "\n由消息段构成的消息\n"
  example: []
  syntax:
    content: public class Message
    content.vb: Public Class Message
  inheritance:
  - System.Object
  derivedClasses:
  - cqhttp.Cyan.Messages.CommonMessages.MessageShake
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: cqhttp.Cyan.Messages.Message.data
  commentId: F:cqhttp.Cyan.Messages.Message.data
  id: data
  parent: cqhttp.Cyan.Messages.Message
  langs:
  - csharp
  - vb
  name: data
  nameWithType: Message.data
  fullName: cqhttp.Cyan.Messages.Message.data
  type: Field
  source:
    remote:
      path: src/Messages/Message.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: data
    path: src/Messages/Message.cs
    startLine: 16
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.Messages
  summary: "\n消息段列表\n"
  example: []
  syntax:
    content: public List<Element> data
    return:
      type: System.Collections.Generic.List{cqhttp.Cyan.Messages.CQElements.Base.Element}
    content.vb: Public data As List(Of Element)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: cqhttp.Cyan.Messages.Message.#ctor(cqhttp.Cyan.Messages.CQElements.Base.Element[])
  commentId: M:cqhttp.Cyan.Messages.Message.#ctor(cqhttp.Cyan.Messages.CQElements.Base.Element[])
  id: '#ctor(cqhttp.Cyan.Messages.CQElements.Base.Element[])'
  parent: cqhttp.Cyan.Messages.Message
  langs:
  - csharp
  - vb
  name: Message(Element[])
  nameWithType: Message.Message(Element[])
  fullName: cqhttp.Cyan.Messages.Message.Message(cqhttp.Cyan.Messages.CQElements.Base.Element[])
  type: Constructor
  source:
    remote:
      path: src/Messages/Message.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: .ctor
    path: src/Messages/Message.cs
    startLine: 18
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.Messages
  example: []
  syntax:
    content: public Message(params Element[] elements)
    parameters:
    - id: elements
      type: cqhttp.Cyan.Messages.CQElements.Base.Element[]
      description: 构建的消息段列表
    content.vb: Public Sub New(ParamArray elements As Element())
  overload: cqhttp.Cyan.Messages.Message.#ctor*
  nameWithType.vb: Message.Message(Element())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: cqhttp.Cyan.Messages.Message.Message(cqhttp.Cyan.Messages.CQElements.Base.Element())
  name.vb: Message(Element())
- uid: cqhttp.Cyan.Messages.Message.op_Addition(cqhttp.Cyan.Messages.Message,cqhttp.Cyan.Messages.Message)
  commentId: M:cqhttp.Cyan.Messages.Message.op_Addition(cqhttp.Cyan.Messages.Message,cqhttp.Cyan.Messages.Message)
  id: op_Addition(cqhttp.Cyan.Messages.Message,cqhttp.Cyan.Messages.Message)
  parent: cqhttp.Cyan.Messages.Message
  langs:
  - csharp
  - vb
  name: Addition(Message, Message)
  nameWithType: Message.Addition(Message, Message)
  fullName: cqhttp.Cyan.Messages.Message.Addition(cqhttp.Cyan.Messages.Message, cqhttp.Cyan.Messages.Message)
  type: Operator
  source:
    remote:
      path: src/Messages/Message.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: op_Addition
    path: src/Messages/Message.cs
    startLine: 24
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.Messages
  summary: "\n拼接消息\n"
  example: []
  syntax:
    content: public static Message operator +(Message a, Message b)
    parameters:
    - id: a
      type: cqhttp.Cyan.Messages.Message
    - id: b
      type: cqhttp.Cyan.Messages.Message
    return:
      type: cqhttp.Cyan.Messages.Message
    content.vb: Public Shared Operator +(a As Message, b As Message) As Message
  overload: cqhttp.Cyan.Messages.Message.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: cqhttp.Cyan.Messages.Message.op_Addition(cqhttp.Cyan.Messages.Message,cqhttp.Cyan.Messages.CQElements.Base.Element)
  commentId: M:cqhttp.Cyan.Messages.Message.op_Addition(cqhttp.Cyan.Messages.Message,cqhttp.Cyan.Messages.CQElements.Base.Element)
  id: op_Addition(cqhttp.Cyan.Messages.Message,cqhttp.Cyan.Messages.CQElements.Base.Element)
  parent: cqhttp.Cyan.Messages.Message
  langs:
  - csharp
  - vb
  name: Addition(Message, Element)
  nameWithType: Message.Addition(Message, Element)
  fullName: cqhttp.Cyan.Messages.Message.Addition(cqhttp.Cyan.Messages.Message, cqhttp.Cyan.Messages.CQElements.Base.Element)
  type: Operator
  source:
    remote:
      path: src/Messages/Message.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: op_Addition
    path: src/Messages/Message.cs
    startLine: 31
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.Messages
  summary: "\n向消息拼接消息段\n"
  example: []
  syntax:
    content: public static Message operator +(Message a, Element b)
    parameters:
    - id: a
      type: cqhttp.Cyan.Messages.Message
    - id: b
      type: cqhttp.Cyan.Messages.CQElements.Base.Element
    return:
      type: cqhttp.Cyan.Messages.Message
    content.vb: Public Shared Operator +(a As Message, b As Element) As Message
  overload: cqhttp.Cyan.Messages.Message.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: cqhttp.Cyan.Messages.Message.raw_data_cq
  commentId: P:cqhttp.Cyan.Messages.Message.raw_data_cq
  id: raw_data_cq
  parent: cqhttp.Cyan.Messages.Message
  langs:
  - csharp
  - vb
  name: raw_data_cq
  nameWithType: Message.raw_data_cq
  fullName: cqhttp.Cyan.Messages.Message.raw_data_cq
  type: Property
  source:
    remote:
      path: src/Messages/Message.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: raw_data_cq
    path: src/Messages/Message.cs
    startLine: 38
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.Messages
  summary: "\n将消息序列化为CQ码格式\n"
  example: []
  syntax:
    content: public string raw_data_cq { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property raw_data_cq As String
  overload: cqhttp.Cyan.Messages.Message.raw_data_cq*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: cqhttp.Cyan.Messages.Message.raw_data_json
  commentId: P:cqhttp.Cyan.Messages.Message.raw_data_json
  id: raw_data_json
  parent: cqhttp.Cyan.Messages.Message
  langs:
  - csharp
  - vb
  name: raw_data_json
  nameWithType: Message.raw_data_json
  fullName: cqhttp.Cyan.Messages.Message.raw_data_json
  type: Property
  source:
    remote:
      path: src/Messages/Message.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: raw_data_json
    path: src/Messages/Message.cs
    startLine: 46
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.Messages
  summary: "\n将消息序列化为Json格式\n"
  example: []
  syntax:
    content: public string raw_data_json { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property raw_data_json As String
  overload: cqhttp.Cyan.Messages.Message.raw_data_json*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: cqhttp.Cyan.Messages.Message.ToString
  commentId: M:cqhttp.Cyan.Messages.Message.ToString
  id: ToString
  parent: cqhttp.Cyan.Messages.Message
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Message.ToString()
  fullName: cqhttp.Cyan.Messages.Message.ToString()
  type: Method
  source:
    remote:
      path: src/Messages/Message.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: ToString
    path: src/Messages/Message.cs
    startLine: 54
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.Messages
  summary: "\n按照默认设置序列化消息\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: cqhttp.Cyan.Messages.Message.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: cqhttp.Cyan.Messages.Message.Deserialize(System.String,System.Int16@)
  commentId: M:cqhttp.Cyan.Messages.Message.Deserialize(System.String,System.Int16@)
  id: Deserialize(System.String,System.Int16@)
  parent: cqhttp.Cyan.Messages.Message
  langs:
  - csharp
  - vb
  name: Deserialize(String, out Int16)
  nameWithType: Message.Deserialize(String, out Int16)
  fullName: cqhttp.Cyan.Messages.Message.Deserialize(System.String, out System.Int16)
  type: Method
  source:
    remote:
      path: src/Messages/Message.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: Deserialize
    path: src/Messages/Message.cs
    startLine: 73
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.Messages
  example: []
  syntax:
    content: public static Message Deserialize(string message, out short result)
    parameters:
    - id: message
      type: System.String
      description: 字符串形式的消息
    - id: result
      type: System.Int16
      description: 返回反序列化的结果,原消息为Json则为1,含CQ码则为-1,纯文本则为0
    return:
      type: cqhttp.Cyan.Messages.Message
      description: 反序列化后的<code>Message</code>对象
    content.vb: Public Shared Function Deserialize(message As String, ByRef result As Short) As Message
  overload: cqhttp.Cyan.Messages.Message.Deserialize*
  nameWithType.vb: Message.Deserialize(String, ByRef Int16)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: cqhttp.Cyan.Messages.Message.Deserialize(System.String, ByRef System.Int16)
  name.vb: Deserialize(String, ByRef Int16)
references:
- uid: cqhttp.Cyan.Messages
  commentId: N:cqhttp.Cyan.Messages
  name: cqhttp.Cyan.Messages
  nameWithType: cqhttp.Cyan.Messages
  fullName: cqhttp.Cyan.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{cqhttp.Cyan.Messages.CQElements.Base.Element}
  commentId: T:System.Collections.Generic.List{cqhttp.Cyan.Messages.CQElements.Base.Element}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Element>
  nameWithType: List<Element>
  fullName: System.Collections.Generic.List<cqhttp.Cyan.Messages.CQElements.Base.Element>
  nameWithType.vb: List(Of Element)
  fullName.vb: System.Collections.Generic.List(Of cqhttp.Cyan.Messages.CQElements.Base.Element)
  name.vb: List(Of Element)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: cqhttp.Cyan.Messages.CQElements.Base.Element
    name: Element
    nameWithType: Element
    fullName: cqhttp.Cyan.Messages.CQElements.Base.Element
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: cqhttp.Cyan.Messages.CQElements.Base.Element
    name: Element
    nameWithType: Element
    fullName: cqhttp.Cyan.Messages.CQElements.Base.Element
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: cqhttp.Cyan.Messages.Message.#ctor*
  commentId: Overload:cqhttp.Cyan.Messages.Message.#ctor
  name: Message
  nameWithType: Message.Message
  fullName: cqhttp.Cyan.Messages.Message.Message
- uid: cqhttp.Cyan.Messages.CQElements.Base.Element[]
  isExternal: true
  name: Element[]
  nameWithType: Element[]
  fullName: cqhttp.Cyan.Messages.CQElements.Base.Element[]
  nameWithType.vb: Element()
  fullName.vb: cqhttp.Cyan.Messages.CQElements.Base.Element()
  name.vb: Element()
  spec.csharp:
  - uid: cqhttp.Cyan.Messages.CQElements.Base.Element
    name: Element
    nameWithType: Element
    fullName: cqhttp.Cyan.Messages.CQElements.Base.Element
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: cqhttp.Cyan.Messages.CQElements.Base.Element
    name: Element
    nameWithType: Element
    fullName: cqhttp.Cyan.Messages.CQElements.Base.Element
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: cqhttp.Cyan.Messages.Message.op_Addition*
  commentId: Overload:cqhttp.Cyan.Messages.Message.op_Addition
  name: Addition
  nameWithType: Message.Addition
  fullName: cqhttp.Cyan.Messages.Message.Addition
- uid: cqhttp.Cyan.Messages.Message
  commentId: T:cqhttp.Cyan.Messages.Message
  parent: cqhttp.Cyan.Messages
  name: Message
  nameWithType: Message
  fullName: cqhttp.Cyan.Messages.Message
- uid: cqhttp.Cyan.Messages.CQElements.Base.Element
  commentId: T:cqhttp.Cyan.Messages.CQElements.Base.Element
  parent: cqhttp.Cyan.Messages.CQElements.Base
  name: Element
  nameWithType: Element
  fullName: cqhttp.Cyan.Messages.CQElements.Base.Element
- uid: cqhttp.Cyan.Messages.CQElements.Base
  commentId: N:cqhttp.Cyan.Messages.CQElements.Base
  name: cqhttp.Cyan.Messages.CQElements.Base
  nameWithType: cqhttp.Cyan.Messages.CQElements.Base
  fullName: cqhttp.Cyan.Messages.CQElements.Base
- uid: cqhttp.Cyan.Messages.Message.raw_data_cq*
  commentId: Overload:cqhttp.Cyan.Messages.Message.raw_data_cq
  name: raw_data_cq
  nameWithType: Message.raw_data_cq
  fullName: cqhttp.Cyan.Messages.Message.raw_data_cq
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: cqhttp.Cyan.Messages.Message.raw_data_json*
  commentId: Overload:cqhttp.Cyan.Messages.Message.raw_data_json
  name: raw_data_json
  nameWithType: Message.raw_data_json
  fullName: cqhttp.Cyan.Messages.Message.raw_data_json
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: cqhttp.Cyan.Messages.Message.ToString*
  commentId: Overload:cqhttp.Cyan.Messages.Message.ToString
  name: ToString
  nameWithType: Message.ToString
  fullName: cqhttp.Cyan.Messages.Message.ToString
- uid: cqhttp.Cyan.Messages.Message.Deserialize*
  commentId: Overload:cqhttp.Cyan.Messages.Message.Deserialize
  name: Deserialize
  nameWithType: Message.Deserialize
  fullName: cqhttp.Cyan.Messages.Message.Deserialize
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
