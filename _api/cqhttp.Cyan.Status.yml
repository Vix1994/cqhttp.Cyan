### YamlMime:ManagedReference
items:
- uid: cqhttp.Cyan.Status
  commentId: T:cqhttp.Cyan.Status
  id: Status
  parent: cqhttp.Cyan
  children:
  - cqhttp.Cyan.Status.app_enabled
  - cqhttp.Cyan.Status.app_good
  - cqhttp.Cyan.Status.app_initialized
  - cqhttp.Cyan.Status.good
  - cqhttp.Cyan.Status.online
  - cqhttp.Cyan.Status.plugins_good
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: Status
  fullName: cqhttp.Cyan.Status
  type: Class
  source:
    remote:
      path: src/Status.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: Status
    path: src/Status.cs
    startLine: 8
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan
  summary: "\n插件运行状态\n<see>https://cqhttp.cc/docs/4.6/#/API?id=%E5%93%8D%E5%BA%94%E6%95%B0%E6%8D%AE27</see>\n"
  example: []
  syntax:
    content: >-
      [JsonObject]

      public class Status
    content.vb: >-
      <JsonObject>

      Public Class Status
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Newtonsoft.Json.JsonObjectAttribute
    ctor: Newtonsoft.Json.JsonObjectAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: cqhttp.Cyan.Status.app_initialized
  commentId: P:cqhttp.Cyan.Status.app_initialized
  id: app_initialized
  parent: cqhttp.Cyan.Status
  langs:
  - csharp
  - vb
  name: app_initialized
  nameWithType: Status.app_initialized
  fullName: cqhttp.Cyan.Status.app_initialized
  type: Property
  source:
    remote:
      path: src/Status.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: app_initialized
    path: src/Status.cs
    startLine: 11
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan
  example: []
  syntax:
    content: >-
      [JsonProperty("app_initialized")]

      public bool app_initialized { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("app_initialized")>

      Public ReadOnly Property app_initialized As Boolean
  overload: cqhttp.Cyan.Status.app_initialized*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: app_initialized
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: cqhttp.Cyan.Status.app_enabled
  commentId: P:cqhttp.Cyan.Status.app_enabled
  id: app_enabled
  parent: cqhttp.Cyan.Status
  langs:
  - csharp
  - vb
  name: app_enabled
  nameWithType: Status.app_enabled
  fullName: cqhttp.Cyan.Status.app_enabled
  type: Property
  source:
    remote:
      path: src/Status.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: app_enabled
    path: src/Status.cs
    startLine: 14
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan
  example: []
  syntax:
    content: >-
      [JsonProperty("app_enabled")]

      public bool app_enabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("app_enabled")>

      Public ReadOnly Property app_enabled As Boolean
  overload: cqhttp.Cyan.Status.app_enabled*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: app_enabled
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: cqhttp.Cyan.Status.plugins_good
  commentId: P:cqhttp.Cyan.Status.plugins_good
  id: plugins_good
  parent: cqhttp.Cyan.Status
  langs:
  - csharp
  - vb
  name: plugins_good
  nameWithType: Status.plugins_good
  fullName: cqhttp.Cyan.Status.plugins_good
  type: Property
  source:
    remote:
      path: src/Status.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: plugins_good
    path: src/Status.cs
    startLine: 17
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan
  example: []
  syntax:
    content: >-
      [JsonProperty("plugins_good")]

      public Dictionary<string, bool> plugins_good { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Boolean}
    content.vb: >-
      <JsonProperty("plugins_good")>

      Public ReadOnly Property plugins_good As Dictionary(Of String, Boolean)
  overload: cqhttp.Cyan.Status.plugins_good*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: plugins_good
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: cqhttp.Cyan.Status.app_good
  commentId: P:cqhttp.Cyan.Status.app_good
  id: app_good
  parent: cqhttp.Cyan.Status
  langs:
  - csharp
  - vb
  name: app_good
  nameWithType: Status.app_good
  fullName: cqhttp.Cyan.Status.app_good
  type: Property
  source:
    remote:
      path: src/Status.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: app_good
    path: src/Status.cs
    startLine: 20
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan
  example: []
  syntax:
    content: >-
      [JsonProperty("app_good")]

      public bool app_good { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("app_good")>

      Public ReadOnly Property app_good As Boolean
  overload: cqhttp.Cyan.Status.app_good*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: app_good
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: cqhttp.Cyan.Status.online
  commentId: P:cqhttp.Cyan.Status.online
  id: online
  parent: cqhttp.Cyan.Status
  langs:
  - csharp
  - vb
  name: online
  nameWithType: Status.online
  fullName: cqhttp.Cyan.Status.online
  type: Property
  source:
    remote:
      path: src/Status.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: online
    path: src/Status.cs
    startLine: 23
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan
  example: []
  syntax:
    content: >-
      [JsonProperty("online")]

      public bool online { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("online")>

      Public ReadOnly Property online As Boolean
  overload: cqhttp.Cyan.Status.online*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: online
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: cqhttp.Cyan.Status.good
  commentId: P:cqhttp.Cyan.Status.good
  id: good
  parent: cqhttp.Cyan.Status
  langs:
  - csharp
  - vb
  name: good
  nameWithType: Status.good
  fullName: cqhttp.Cyan.Status.good
  type: Property
  source:
    remote:
      path: src/Status.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: good
    path: src/Status.cs
    startLine: 26
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan
  example: []
  syntax:
    content: >-
      [JsonProperty("good")]

      public bool good { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("good")>

      Public ReadOnly Property good As Boolean
  overload: cqhttp.Cyan.Status.good*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: good
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: cqhttp.Cyan
  commentId: N:cqhttp.Cyan
  name: cqhttp.Cyan
  nameWithType: cqhttp.Cyan
  fullName: cqhttp.Cyan
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: cqhttp.Cyan.Status.app_initialized*
  commentId: Overload:cqhttp.Cyan.Status.app_initialized
  name: app_initialized
  nameWithType: Status.app_initialized
  fullName: cqhttp.Cyan.Status.app_initialized
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: cqhttp.Cyan.Status.app_enabled*
  commentId: Overload:cqhttp.Cyan.Status.app_enabled
  name: app_enabled
  nameWithType: Status.app_enabled
  fullName: cqhttp.Cyan.Status.app_enabled
- uid: cqhttp.Cyan.Status.plugins_good*
  commentId: Overload:cqhttp.Cyan.Status.plugins_good
  name: plugins_good
  nameWithType: Status.plugins_good
  fullName: cqhttp.Cyan.Status.plugins_good
- uid: System.Collections.Generic.Dictionary{System.String,System.Boolean}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Boolean}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Boolean>
  nameWithType: Dictionary<String, Boolean>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Boolean>
  nameWithType.vb: Dictionary(Of String, Boolean)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Boolean)
  name.vb: Dictionary(Of String, Boolean)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: cqhttp.Cyan.Status.app_good*
  commentId: Overload:cqhttp.Cyan.Status.app_good
  name: app_good
  nameWithType: Status.app_good
  fullName: cqhttp.Cyan.Status.app_good
- uid: cqhttp.Cyan.Status.online*
  commentId: Overload:cqhttp.Cyan.Status.online
  name: online
  nameWithType: Status.online
  fullName: cqhttp.Cyan.Status.online
- uid: cqhttp.Cyan.Status.good*
  commentId: Overload:cqhttp.Cyan.Status.good
  name: good
  nameWithType: Status.good
  fullName: cqhttp.Cyan.Status.good
