### YamlMime:ManagedReference
items:
- uid: cqhttp.Cyan.Messages.CQElements.Base.ElementFile
  commentId: T:cqhttp.Cyan.Messages.CQElements.Base.ElementFile
  id: ElementFile
  parent: cqhttp.Cyan.Messages.CQElements.Base
  children:
  - cqhttp.Cyan.Messages.CQElements.Base.ElementFile.#ctor(System.String,System.Byte[],System.Boolean)
  - cqhttp.Cyan.Messages.CQElements.Base.ElementFile.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - cqhttp.Cyan.Messages.CQElements.Base.ElementFile.#ctor(System.String,System.String,System.Boolean)
  - cqhttp.Cyan.Messages.CQElements.Base.ElementFile.#ctor(System.String,System.ValueTuple{System.String,System.String}[])
  - cqhttp.Cyan.Messages.CQElements.Base.ElementFile.fileUrl
  - cqhttp.Cyan.Messages.CQElements.Base.ElementFile.Fix
  - cqhttp.Cyan.Messages.CQElements.Base.ElementFile.isFixed
  langs:
  - csharp
  - vb
  name: ElementFile
  nameWithType: ElementFile
  fullName: cqhttp.Cyan.Messages.CQElements.Base.ElementFile
  type: Class
  source:
    remote:
      path: src/Messages/CQElements/Base/BaseElementFile.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: ElementFile
    path: src/Messages/CQElements/Base/BaseElementFile.cs
    startLine: 10
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.Messages.CQElements.Base
  summary: "\n包括图片，语音\n"
  example: []
  syntax:
    content: 'public class ElementFile : Element'
    content.vb: >-
      Public Class ElementFile
          Inherits Element
  inheritance:
  - System.Object
  - cqhttp.Cyan.Messages.CQElements.Base.Element
  derivedClasses:
  - cqhttp.Cyan.Messages.CQElements.ElementImage
  - cqhttp.Cyan.Messages.CQElements.ElementRecord
  inheritedMembers:
  - cqhttp.Cyan.Messages.CQElements.Base.Element.type
  - cqhttp.Cyan.Messages.CQElements.Base.Element.data
  - cqhttp.Cyan.Messages.CQElements.Base.Element.raw_data_cq
  - cqhttp.Cyan.Messages.CQElements.Base.Element.raw_data_json
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.fileUrl
  commentId: P:cqhttp.Cyan.Messages.CQElements.Base.ElementFile.fileUrl
  id: fileUrl
  parent: cqhttp.Cyan.Messages.CQElements.Base.ElementFile
  langs:
  - csharp
  - vb
  name: fileUrl
  nameWithType: ElementFile.fileUrl
  fullName: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.fileUrl
  type: Property
  source:
    remote:
      path: src/Messages/CQElements/Base/BaseElementFile.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: fileUrl
    path: src/Messages/CQElements/Base/BaseElementFile.cs
    startLine: 16
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.Messages.CQElements.Base
  summary: "\nstores the location of the file\ncould be base64://, http(s):// or file://\n<see>https://tools.ietf.org/html/rfc8089</see>\n"
  example: []
  syntax:
    content: public string fileUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property fileUrl As String
  overload: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.fileUrl*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.isFixed
  commentId: P:cqhttp.Cyan.Messages.CQElements.Base.ElementFile.isFixed
  id: isFixed
  parent: cqhttp.Cyan.Messages.CQElements.Base.ElementFile
  langs:
  - csharp
  - vb
  name: isFixed
  nameWithType: ElementFile.isFixed
  fullName: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.isFixed
  type: Property
  source:
    remote:
      path: src/Messages/CQElements/Base/BaseElementFile.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: isFixed
    path: src/Messages/CQElements/Base/BaseElementFile.cs
    startLine: 19
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.Messages.CQElements.Base
  summary: represents whether the file has downloaded
  example: []
  syntax:
    content: public bool isFixed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isFixed As Boolean
  overload: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.isFixed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.#ctor(System.String,System.ValueTuple{System.String,System.String}[])
  commentId: M:cqhttp.Cyan.Messages.CQElements.Base.ElementFile.#ctor(System.String,System.ValueTuple{System.String,System.String}[])
  id: '#ctor(System.String,System.ValueTuple{System.String,System.String}[])'
  parent: cqhttp.Cyan.Messages.CQElements.Base.ElementFile
  langs:
  - csharp
  - vb
  name: ElementFile(String, (String key, String val)[])
  nameWithType: ElementFile.ElementFile(String, (String key, String val)[])
  fullName: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.ElementFile(System.String, System.ValueTuple<System.String, System.String>[])
  type: Constructor
  source:
    remote:
      path: src/Messages/CQElements/Base/BaseElementFile.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: .ctor
    path: src/Messages/CQElements/Base/BaseElementFile.cs
    startLine: 31
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.Messages.CQElements.Base
  summary: "\n手动构造一个消息段，一般用不到\n"
  example: []
  syntax:
    content: public ElementFile(string type, params (string key, string val)[] dict)
    parameters:
    - id: type
      type: System.String
      description: 消息段类型
    - id: dict
      type: System.ValueTuple{System.String,System.String}[]
      description: 手动输入的键值对
    content.vb: Public Sub New(type As String, ParamArray dict As(key As String, val As String)())
  overload: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.#ctor*
  nameWithType.vb: ElementFile.ElementFile(String, (key As String, val As String)())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.ElementFile(System.String, System.ValueTuple(Of System.String, System.String)())
  name.vb: ElementFile(String, (key As String, val As String)())
- uid: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:cqhttp.Cyan.Messages.CQElements.Base.ElementFile.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: '#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String})'
  parent: cqhttp.Cyan.Messages.CQElements.Base.ElementFile
  langs:
  - csharp
  - vb
  name: ElementFile(String, Dictionary<String, String>)
  nameWithType: ElementFile.ElementFile(String, Dictionary<String, String>)
  fullName: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.ElementFile(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Constructor
  source:
    remote:
      path: src/Messages/CQElements/Base/BaseElementFile.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: .ctor
    path: src/Messages/CQElements/Base/BaseElementFile.cs
    startLine: 38
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.Messages.CQElements.Base
  summary: "\n构造消息段，一般不会手动调用\n"
  example: []
  syntax:
    content: public ElementFile(string type, Dictionary<string, string> data)
    parameters:
    - id: type
      type: System.String
      description: 消息段类型
    - id: data
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: 消息段键值对
    content.vb: Public Sub New(type As String, data As Dictionary(Of String, String))
  overload: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.#ctor*
  nameWithType.vb: ElementFile.ElementFile(String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.ElementFile(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: ElementFile(String, Dictionary(Of String, String))
- uid: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.#ctor(System.String,System.Byte[],System.Boolean)
  commentId: M:cqhttp.Cyan.Messages.CQElements.Base.ElementFile.#ctor(System.String,System.Byte[],System.Boolean)
  id: '#ctor(System.String,System.Byte[],System.Boolean)'
  parent: cqhttp.Cyan.Messages.CQElements.Base.ElementFile
  langs:
  - csharp
  - vb
  name: ElementFile(String, Byte[], Boolean)
  nameWithType: ElementFile.ElementFile(String, Byte[], Boolean)
  fullName: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.ElementFile(System.String, System.Byte[], System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Messages/CQElements/Base/BaseElementFile.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: .ctor
    path: src/Messages/CQElements/Base/BaseElementFile.cs
    startLine: 47
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.Messages.CQElements.Base
  summary: "\n通过byte array构造文件消息段\n"
  example: []
  syntax:
    content: public ElementFile(string type, byte[] bytes, bool useCache)
    parameters:
    - id: type
      type: System.String
      description: 消息段种类
    - id: bytes
      type: System.Byte[]
      description: ''
    - id: useCache
      type: System.Boolean
      description: ''
    content.vb: Public Sub New(type As String, bytes As Byte(), useCache As Boolean)
  overload: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.#ctor*
  nameWithType.vb: ElementFile.ElementFile(String, Byte(), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.ElementFile(System.String, System.Byte(), System.Boolean)
  name.vb: ElementFile(String, Byte(), Boolean)
- uid: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.#ctor(System.String,System.String,System.Boolean)
  commentId: M:cqhttp.Cyan.Messages.CQElements.Base.ElementFile.#ctor(System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.Boolean)'
  parent: cqhttp.Cyan.Messages.CQElements.Base.ElementFile
  langs:
  - csharp
  - vb
  name: ElementFile(String, String, Boolean)
  nameWithType: ElementFile.ElementFile(String, String, Boolean)
  fullName: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.ElementFile(System.String, System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Messages/CQElements/Base/BaseElementFile.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: .ctor
    path: src/Messages/CQElements/Base/BaseElementFile.cs
    startLine: 58
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.Messages.CQElements.Base
  summary: "\n通过url构建文件消息段\n"
  example: []
  syntax:
    content: public ElementFile(string type, string url, bool useCache)
    parameters:
    - id: type
      type: System.String
      description: 消息段种类
    - id: url
      type: System.String
      description: ''
    - id: useCache
      type: System.Boolean
      description: 是否缓存于酷Q端
    content.vb: Public Sub New(type As String, url As String, useCache As Boolean)
  overload: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.Fix
  commentId: M:cqhttp.Cyan.Messages.CQElements.Base.ElementFile.Fix
  id: Fix
  parent: cqhttp.Cyan.Messages.CQElements.Base.ElementFile
  langs:
  - csharp
  - vb
  name: Fix()
  nameWithType: ElementFile.Fix()
  fullName: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.Fix()
  type: Method
  source:
    remote:
      path: src/Messages/CQElements/Base/BaseElementFile.cs
      branch: master
      repo: https://github.com/frankli0324/cqhttp.Cyan.git
    id: Fix
    path: src/Messages/CQElements/Base/BaseElementFile.cs
    startLine: 77
  assemblies:
  - cqhttp.Cyan
  namespace: cqhttp.Cyan.Messages.CQElements.Base
  summary: "\n下载图片并转为base64存储，并删除data中的url项\n网络环境恶劣的情况下最多获取<xref href=\"cqhttp.Cyan.Config.networkMaxFailure\" data-throw-if-not-resolved=\"false\"></xref>次\n若仍需url可从<xref href=\"cqhttp.Cyan.Messages.CQElements.Base.ElementFile.fileUrl\" data-throw-if-not-resolved=\"false\"></xref>中获取\n"
  example: []
  syntax:
    content: public Task<bool> Fix()
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: 返回是否成功获取到
    content.vb: Public Function Fix As Task(Of Boolean)
  overload: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.Fix*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: cqhttp.Cyan.Messages.CQElements.Base
  commentId: N:cqhttp.Cyan.Messages.CQElements.Base
  name: cqhttp.Cyan.Messages.CQElements.Base
  nameWithType: cqhttp.Cyan.Messages.CQElements.Base
  fullName: cqhttp.Cyan.Messages.CQElements.Base
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: cqhttp.Cyan.Messages.CQElements.Base.Element
  commentId: T:cqhttp.Cyan.Messages.CQElements.Base.Element
  parent: cqhttp.Cyan.Messages.CQElements.Base
  name: Element
  nameWithType: Element
  fullName: cqhttp.Cyan.Messages.CQElements.Base.Element
- uid: cqhttp.Cyan.Messages.CQElements.Base.Element.type
  commentId: P:cqhttp.Cyan.Messages.CQElements.Base.Element.type
  parent: cqhttp.Cyan.Messages.CQElements.Base.Element
  name: type
  nameWithType: Element.type
  fullName: cqhttp.Cyan.Messages.CQElements.Base.Element.type
- uid: cqhttp.Cyan.Messages.CQElements.Base.Element.data
  commentId: P:cqhttp.Cyan.Messages.CQElements.Base.Element.data
  parent: cqhttp.Cyan.Messages.CQElements.Base.Element
  name: data
  nameWithType: Element.data
  fullName: cqhttp.Cyan.Messages.CQElements.Base.Element.data
- uid: cqhttp.Cyan.Messages.CQElements.Base.Element.raw_data_cq
  commentId: P:cqhttp.Cyan.Messages.CQElements.Base.Element.raw_data_cq
  parent: cqhttp.Cyan.Messages.CQElements.Base.Element
  name: raw_data_cq
  nameWithType: Element.raw_data_cq
  fullName: cqhttp.Cyan.Messages.CQElements.Base.Element.raw_data_cq
- uid: cqhttp.Cyan.Messages.CQElements.Base.Element.raw_data_json
  commentId: P:cqhttp.Cyan.Messages.CQElements.Base.Element.raw_data_json
  parent: cqhttp.Cyan.Messages.CQElements.Base.Element
  name: raw_data_json
  nameWithType: Element.raw_data_json
  fullName: cqhttp.Cyan.Messages.CQElements.Base.Element.raw_data_json
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.fileUrl*
  commentId: Overload:cqhttp.Cyan.Messages.CQElements.Base.ElementFile.fileUrl
  name: fileUrl
  nameWithType: ElementFile.fileUrl
  fullName: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.fileUrl
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.isFixed*
  commentId: Overload:cqhttp.Cyan.Messages.CQElements.Base.ElementFile.isFixed
  name: isFixed
  nameWithType: ElementFile.isFixed
  fullName: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.isFixed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.#ctor*
  commentId: Overload:cqhttp.Cyan.Messages.CQElements.Base.ElementFile.#ctor
  name: ElementFile
  nameWithType: ElementFile.ElementFile
  fullName: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.ElementFile
- uid: System.ValueTuple{System.String,System.String}[]
  isExternal: true
  name: ValueTuple<String, String>[]
  nameWithType: ValueTuple<String, String>[]
  fullName: System.ValueTuple<System.String, System.String>[]
  nameWithType.vb: ValueTuple(Of String, String)()
  fullName.vb: System.ValueTuple(Of System.String, System.String)()
  name.vb: ValueTuple(Of String, String)()
  spec.csharp:
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: cqhttp.Cyan.Config.networkMaxFailure
  commentId: F:cqhttp.Cyan.Config.networkMaxFailure
  isExternal: true
- uid: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.fileUrl
  commentId: P:cqhttp.Cyan.Messages.CQElements.Base.ElementFile.fileUrl
  parent: cqhttp.Cyan.Messages.CQElements.Base.ElementFile
  name: fileUrl
  nameWithType: ElementFile.fileUrl
  fullName: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.fileUrl
- uid: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.Fix*
  commentId: Overload:cqhttp.Cyan.Messages.CQElements.Base.ElementFile.Fix
  name: Fix
  nameWithType: ElementFile.Fix
  fullName: cqhttp.Cyan.Messages.CQElements.Base.ElementFile.Fix
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: cqhttp.Cyan.Messages.CQElements.Base.ElementFile
  commentId: T:cqhttp.Cyan.Messages.CQElements.Base.ElementFile
  parent: cqhttp.Cyan.Messages.CQElements.Base
  name: ElementFile
  nameWithType: ElementFile
  fullName: cqhttp.Cyan.Messages.CQElements.Base.ElementFile
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
